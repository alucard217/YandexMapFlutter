import 'package:cloud_firestore/cloud_firestore.dart';
import '../models/review.dart';

class ReviewService {
  final CollectionReference _collection =
      FirebaseFirestore.instance.collection('reviews');

  /// –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç–∑—ã–≤ –≤ Firestore
  Future<void> saveReview(Review review) async {
    try {
      await _collection.add(review.toMap());
      print('‚úÖ –û—Ç–∑—ã–≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: ${review.text}');
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞: $e');
    }
  }

  /// –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ –æ—Ç–∑—ã–≤—ã –ø–æ –ø–æ–ª—é —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º fieldId
  Future<List<Review>> loadReviews(String fieldId) async {
    try {
      final snapshot = await _collection
          .where('fieldId', isEqualTo: fieldId)
          .orderBy('timestamp', descending: true)
          .get();

      final reviews = snapshot.docs
          .map((doc) => Review.fromMap(doc.data() as Map<String, dynamic>))
          .toList();

      print('üì• –ó–∞–≥—Ä—É–∑–∏–ª–∏ ${reviews.length} –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –ø–æ–ª—è $fieldId');
      return reviews;
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç–∑—ã–≤–æ–≤: $e');
      return [];
    }
  }
}
